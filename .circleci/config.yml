version: 2.1
jobs:
  hello-world:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Say Hello
          command: |
            echo "Hello World"
  build-frontend:
     docker: 
       - image: circleci/node:13.8.0
     steps:
       - checkout
       - restore_cache:
          keys: [frontend-build]
       - run:
          name: Lint frontend
          command: |
            cd frontend
            npm install
            npm run build
       - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build
  build-backend:
    docker:
     - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
         name: Backend build
         command: |
          cd backend
          npm install
          npm run build
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build
  test-frontend:
    docker:
     - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Run frontend test
          command: |
            cd frontend
            npm install
            npm run test
  test-backend:
    docker:
     - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Run backend test
          command: |
            cd backend
            npm install
            npm run test
  analyze-frontend:
    docker:
     - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Analyze frontend dependencies
          command: |
            cd frontend
            npm install
            npm audit --audit-level=critical

  analyze-backend:
    docker:
     - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend build]
      - run:
          name: Analyze backened dependencies
          command: |
            cd backend
            npm install
            npm audit --audit-level=critical --force

           
workflows:
  default:
    jobs:
      - hello-world
  build_and_compile:
    jobs:
        - build-frontend
        - build-backend
  test:
    jobs:
      - test-frontend
      - test-backend
  analyze:
    jobs:
      - analyze-frontend
      - analyze-backend
